//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace API_iNews.INEWSQueue {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="INEWSQueuePortBinding", Namespace="http://avid.com/inewsqueue")]
    public partial class INEWSQueue : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetStoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasNextOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasPreviousOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCurrentQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueueRecordsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public INEWSQueue() {
            this.Url = global::API_iNews.Properties.Settings.Default.API_iNews_INEWSQueue_INEWSQueue;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetStoriesCompletedEventHandler GetStoriesCompleted;
        
        /// <remarks/>
        public event HasNextCompletedEventHandler HasNextCompleted;
        
        /// <remarks/>
        public event HasPreviousCompletedEventHandler HasPreviousCompleted;
        
        /// <remarks/>
        public event SetCurrentQueueCompletedEventHandler SetCurrentQueueCompleted;
        
        /// <remarks/>
        public event CreateStoryCompletedEventHandler CreateStoryCompleted;
        
        /// <remarks/>
        public event GetStoryCompletedEventHandler GetStoryCompleted;
        
        /// <remarks/>
        public event GetAttributesCompletedEventHandler GetAttributesCompleted;
        
        /// <remarks/>
        public event GetQueueRecordsCompletedEventHandler GetQueueRecordsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetStoriesResponse", Namespace="http://avid.com/inewsqueue/types")]
        public GetStoriesResponseType GetStories([System.Xml.Serialization.XmlElementAttribute("GetStories", Namespace="http://avid.com/inewsqueue/types")] GetStoriesType GetStories1) {
            object[] results = this.Invoke("GetStories", new object[] {
                        GetStories1});
            return ((GetStoriesResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoriesAsync(GetStoriesType GetStories1) {
            this.GetStoriesAsync(GetStories1, null);
        }
        
        /// <remarks/>
        public void GetStoriesAsync(GetStoriesType GetStories1, object userState) {
            if ((this.GetStoriesOperationCompleted == null)) {
                this.GetStoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoriesOperationCompleted);
            }
            this.InvokeAsync("GetStories", new object[] {
                        GetStories1}, this.GetStoriesOperationCompleted, userState);
        }
        
        private void OnGetStoriesOperationCompleted(object arg) {
            if ((this.GetStoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoriesCompleted(this, new GetStoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("HasNextResponse", Namespace="http://avid.com/inewsqueue/types")]
        public HasNextResponseType HasNext([System.Xml.Serialization.XmlElementAttribute("HasNext", Namespace="http://avid.com/inewsqueue/types")] HasNextType HasNext1) {
            object[] results = this.Invoke("HasNext", new object[] {
                        HasNext1});
            return ((HasNextResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void HasNextAsync(HasNextType HasNext1) {
            this.HasNextAsync(HasNext1, null);
        }
        
        /// <remarks/>
        public void HasNextAsync(HasNextType HasNext1, object userState) {
            if ((this.HasNextOperationCompleted == null)) {
                this.HasNextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasNextOperationCompleted);
            }
            this.InvokeAsync("HasNext", new object[] {
                        HasNext1}, this.HasNextOperationCompleted, userState);
        }
        
        private void OnHasNextOperationCompleted(object arg) {
            if ((this.HasNextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasNextCompleted(this, new HasNextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("HasPreviousResponse", Namespace="http://avid.com/inewsqueue/types")]
        public HasPreviousResponseType HasPrevious([System.Xml.Serialization.XmlElementAttribute("HasPrevious", Namespace="http://avid.com/inewsqueue/types")] HasPreviousType HasPrevious1) {
            object[] results = this.Invoke("HasPrevious", new object[] {
                        HasPrevious1});
            return ((HasPreviousResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void HasPreviousAsync(HasPreviousType HasPrevious1) {
            this.HasPreviousAsync(HasPrevious1, null);
        }
        
        /// <remarks/>
        public void HasPreviousAsync(HasPreviousType HasPrevious1, object userState) {
            if ((this.HasPreviousOperationCompleted == null)) {
                this.HasPreviousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasPreviousOperationCompleted);
            }
            this.InvokeAsync("HasPrevious", new object[] {
                        HasPrevious1}, this.HasPreviousOperationCompleted, userState);
        }
        
        private void OnHasPreviousOperationCompleted(object arg) {
            if ((this.HasPreviousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasPreviousCompleted(this, new HasPreviousCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SetCurrentQueueResponse", Namespace="http://avid.com/inewsqueue/types")]
        public SetCurrentQueueResponseType SetCurrentQueue([System.Xml.Serialization.XmlElementAttribute("SetCurrentQueue", Namespace="http://avid.com/inewsqueue/types")] SetCurrentQueueType SetCurrentQueue1) {
            object[] results = this.Invoke("SetCurrentQueue", new object[] {
                        SetCurrentQueue1});
            return ((SetCurrentQueueResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void SetCurrentQueueAsync(SetCurrentQueueType SetCurrentQueue1) {
            this.SetCurrentQueueAsync(SetCurrentQueue1, null);
        }
        
        /// <remarks/>
        public void SetCurrentQueueAsync(SetCurrentQueueType SetCurrentQueue1, object userState) {
            if ((this.SetCurrentQueueOperationCompleted == null)) {
                this.SetCurrentQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCurrentQueueOperationCompleted);
            }
            this.InvokeAsync("SetCurrentQueue", new object[] {
                        SetCurrentQueue1}, this.SetCurrentQueueOperationCompleted, userState);
        }
        
        private void OnSetCurrentQueueOperationCompleted(object arg) {
            if ((this.SetCurrentQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCurrentQueueCompleted(this, new SetCurrentQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("CreateStoryResponse", Namespace="http://avid.com/inewsqueue/types")]
        public CreateStoryResponseType CreateStory([System.Xml.Serialization.XmlElementAttribute("CreateStory", Namespace="http://avid.com/inewsqueue/types")] CreateStoryType CreateStory1) {
            object[] results = this.Invoke("CreateStory", new object[] {
                        CreateStory1});
            return ((CreateStoryResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStoryAsync(CreateStoryType CreateStory1) {
            this.CreateStoryAsync(CreateStory1, null);
        }
        
        /// <remarks/>
        public void CreateStoryAsync(CreateStoryType CreateStory1, object userState) {
            if ((this.CreateStoryOperationCompleted == null)) {
                this.CreateStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStoryOperationCompleted);
            }
            this.InvokeAsync("CreateStory", new object[] {
                        CreateStory1}, this.CreateStoryOperationCompleted, userState);
        }
        
        private void OnCreateStoryOperationCompleted(object arg) {
            if ((this.CreateStoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStoryCompleted(this, new CreateStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetStoryResponse", Namespace="http://avid.com/inewsqueue/types")]
        public GetStoryResponseType GetStory([System.Xml.Serialization.XmlElementAttribute("GetStory", Namespace="http://avid.com/inewsqueue/types")] GetStoryType GetStory1) {
            object[] results = this.Invoke("GetStory", new object[] {
                        GetStory1});
            return ((GetStoryResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoryAsync(GetStoryType GetStory1) {
            this.GetStoryAsync(GetStory1, null);
        }
        
        /// <remarks/>
        public void GetStoryAsync(GetStoryType GetStory1, object userState) {
            if ((this.GetStoryOperationCompleted == null)) {
                this.GetStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoryOperationCompleted);
            }
            this.InvokeAsync("GetStory", new object[] {
                        GetStory1}, this.GetStoryOperationCompleted, userState);
        }
        
        private void OnGetStoryOperationCompleted(object arg) {
            if ((this.GetStoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoryCompleted(this, new GetStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetAttributesResponse", Namespace="http://avid.com/inewsqueue/types")]
        public GetAttributesResponseType GetAttributes([System.Xml.Serialization.XmlElementAttribute("GetAttributes", Namespace="http://avid.com/inewsqueue/types")] GetAttributesType GetAttributes1) {
            object[] results = this.Invoke("GetAttributes", new object[] {
                        GetAttributes1});
            return ((GetAttributesResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttributesAsync(GetAttributesType GetAttributes1) {
            this.GetAttributesAsync(GetAttributes1, null);
        }
        
        /// <remarks/>
        public void GetAttributesAsync(GetAttributesType GetAttributes1, object userState) {
            if ((this.GetAttributesOperationCompleted == null)) {
                this.GetAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttributesOperationCompleted);
            }
            this.InvokeAsync("GetAttributes", new object[] {
                        GetAttributes1}, this.GetAttributesOperationCompleted, userState);
        }
        
        private void OnGetAttributesOperationCompleted(object arg) {
            if ((this.GetAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttributesCompleted(this, new GetAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetQueueRecordsResponse", Namespace="http://avid.com/inewsqueue/types")]
        public GetQueueRecordsResponseType GetQueueRecords([System.Xml.Serialization.XmlElementAttribute("GetQueueRecords", Namespace="http://avid.com/inewsqueue/types")] GetQueueRecordsType GetQueueRecords1) {
            object[] results = this.Invoke("GetQueueRecords", new object[] {
                        GetQueueRecords1});
            return ((GetQueueRecordsResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueueRecordsAsync(GetQueueRecordsType GetQueueRecords1) {
            this.GetQueueRecordsAsync(GetQueueRecords1, null);
        }
        
        /// <remarks/>
        public void GetQueueRecordsAsync(GetQueueRecordsType GetQueueRecords1, object userState) {
            if ((this.GetQueueRecordsOperationCompleted == null)) {
                this.GetQueueRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueueRecordsOperationCompleted);
            }
            this.InvokeAsync("GetQueueRecords", new object[] {
                        GetQueueRecords1}, this.GetQueueRecordsOperationCompleted, userState);
        }
        
        private void OnGetQueueRecordsOperationCompleted(object arg) {
            if ((this.GetQueueRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueueRecordsCompleted(this, new GetQueueRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class GetStoriesType {
        
        private int numberOfStoriesToGetField;
        
        private bool isStoryBodyIncludedField;
        
        private GetStoriesNavigationEnum navigationField;
        
        /// <remarks/>
        public int NumberOfStoriesToGet {
            get {
                return this.numberOfStoriesToGetField;
            }
            set {
                this.numberOfStoriesToGetField = value;
            }
        }
        
        /// <remarks/>
        public bool IsStoryBodyIncluded {
            get {
                return this.isStoryBodyIncludedField;
            }
            set {
                this.isStoryBodyIncludedField = value;
            }
        }
        
        /// <remarks/>
        public GetStoriesNavigationEnum Navigation {
            get {
                return this.navigationField;
            }
            set {
                this.navigationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public enum GetStoriesNavigationEnum {
        
        /// <remarks/>
        NEXT,
        
        /// <remarks/>
        PREV,
        
        /// <remarks/>
        SAME,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class QueueRecordType {
        
        private string queueLocatorField;
        
        private long storyIDField;
        
        private long mTimeField;
        
        private ExtensionType extensionField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string QueueLocator {
            get {
                return this.queueLocatorField;
            }
            set {
                this.queueLocatorField = value;
            }
        }
        
        /// <remarks/>
        public long StoryID {
            get {
                return this.storyIDField;
            }
            set {
                this.storyIDField = value;
            }
        }
        
        /// <remarks/>
        public long MTime {
            get {
                return this.mTimeField;
            }
            set {
                this.mTimeField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionType Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewssystem/types")]
    public partial class ExtensionType {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class GetQueueRecordsResponseType {
        
        private QueueRecordType[] queueRecordField;
        
        private ExtensionType extensionField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("QueueRecord")]
        public QueueRecordType[] QueueRecord {
            get {
                return this.queueRecordField;
            }
            set {
                this.queueRecordField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionType Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class GetQueueRecordsType {
        
        private int numberOfRecordsToGetField;
        
        private bool resetField;
        
        /// <remarks/>
        public int NumberOfRecordsToGet {
            get {
                return this.numberOfRecordsToGetField;
            }
            set {
                this.numberOfRecordsToGetField = value;
            }
        }
        
        /// <remarks/>
        public bool Reset {
            get {
                return this.resetField;
            }
            set {
                this.resetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class FolderAttributesType {
        
        private string folderFullNameField;
        
        private bool invertedField;
        
        private bool lockedField;
        
        private bool purgeLockedField;
        
        private bool orderedField;
        
        private bool editLockedField;
        
        private bool queuePrintAuthorizedField;
        
        private bool readOnlyField;
        
        private bool sequentialField;
        
        private bool skipOnBackupField;
        
        private bool saveOriginalStoryField;
        
        private bool saveNoOtherVersionOfStoryField;
        
        private bool batchAllowedField;
        
        private bool resolvedWritePermissionField;
        
        private bool generalField;
        
        private bool canUpdateField;
        
        private bool sortedField;
        
        private bool autoRefreshField;
        
        private bool easyLockField;
        
        private bool wireWatchAppendsField;
        
        private bool embeddedFormAllowedField;
        
        private bool productionLockField;
        
        private bool indexedField;
        
        private bool showsTextTimingClocksField;
        
        private bool monitoredField;
        
        private bool canOrderField;
        
        private bool canEnterRemoveField;
        
        private bool canKillAllField;
        
        private bool canModifyPropertiesField;
        
        private bool canOverrideUserLockField;
        
        /// <remarks/>
        public string FolderFullName {
            get {
                return this.folderFullNameField;
            }
            set {
                this.folderFullNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Inverted {
            get {
                return this.invertedField;
            }
            set {
                this.invertedField = value;
            }
        }
        
        /// <remarks/>
        public bool Locked {
            get {
                return this.lockedField;
            }
            set {
                this.lockedField = value;
            }
        }
        
        /// <remarks/>
        public bool PurgeLocked {
            get {
                return this.purgeLockedField;
            }
            set {
                this.purgeLockedField = value;
            }
        }
        
        /// <remarks/>
        public bool Ordered {
            get {
                return this.orderedField;
            }
            set {
                this.orderedField = value;
            }
        }
        
        /// <remarks/>
        public bool EditLocked {
            get {
                return this.editLockedField;
            }
            set {
                this.editLockedField = value;
            }
        }
        
        /// <remarks/>
        public bool QueuePrintAuthorized {
            get {
                return this.queuePrintAuthorizedField;
            }
            set {
                this.queuePrintAuthorizedField = value;
            }
        }
        
        /// <remarks/>
        public bool ReadOnly {
            get {
                return this.readOnlyField;
            }
            set {
                this.readOnlyField = value;
            }
        }
        
        /// <remarks/>
        public bool Sequential {
            get {
                return this.sequentialField;
            }
            set {
                this.sequentialField = value;
            }
        }
        
        /// <remarks/>
        public bool SkipOnBackup {
            get {
                return this.skipOnBackupField;
            }
            set {
                this.skipOnBackupField = value;
            }
        }
        
        /// <remarks/>
        public bool SaveOriginalStory {
            get {
                return this.saveOriginalStoryField;
            }
            set {
                this.saveOriginalStoryField = value;
            }
        }
        
        /// <remarks/>
        public bool SaveNoOtherVersionOfStory {
            get {
                return this.saveNoOtherVersionOfStoryField;
            }
            set {
                this.saveNoOtherVersionOfStoryField = value;
            }
        }
        
        /// <remarks/>
        public bool BatchAllowed {
            get {
                return this.batchAllowedField;
            }
            set {
                this.batchAllowedField = value;
            }
        }
        
        /// <remarks/>
        public bool ResolvedWritePermission {
            get {
                return this.resolvedWritePermissionField;
            }
            set {
                this.resolvedWritePermissionField = value;
            }
        }
        
        /// <remarks/>
        public bool General {
            get {
                return this.generalField;
            }
            set {
                this.generalField = value;
            }
        }
        
        /// <remarks/>
        public bool CanUpdate {
            get {
                return this.canUpdateField;
            }
            set {
                this.canUpdateField = value;
            }
        }
        
        /// <remarks/>
        public bool Sorted {
            get {
                return this.sortedField;
            }
            set {
                this.sortedField = value;
            }
        }
        
        /// <remarks/>
        public bool AutoRefresh {
            get {
                return this.autoRefreshField;
            }
            set {
                this.autoRefreshField = value;
            }
        }
        
        /// <remarks/>
        public bool EasyLock {
            get {
                return this.easyLockField;
            }
            set {
                this.easyLockField = value;
            }
        }
        
        /// <remarks/>
        public bool WireWatchAppends {
            get {
                return this.wireWatchAppendsField;
            }
            set {
                this.wireWatchAppendsField = value;
            }
        }
        
        /// <remarks/>
        public bool EmbeddedFormAllowed {
            get {
                return this.embeddedFormAllowedField;
            }
            set {
                this.embeddedFormAllowedField = value;
            }
        }
        
        /// <remarks/>
        public bool ProductionLock {
            get {
                return this.productionLockField;
            }
            set {
                this.productionLockField = value;
            }
        }
        
        /// <remarks/>
        public bool Indexed {
            get {
                return this.indexedField;
            }
            set {
                this.indexedField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowsTextTimingClocks {
            get {
                return this.showsTextTimingClocksField;
            }
            set {
                this.showsTextTimingClocksField = value;
            }
        }
        
        /// <remarks/>
        public bool Monitored {
            get {
                return this.monitoredField;
            }
            set {
                this.monitoredField = value;
            }
        }
        
        /// <remarks/>
        public bool CanOrder {
            get {
                return this.canOrderField;
            }
            set {
                this.canOrderField = value;
            }
        }
        
        /// <remarks/>
        public bool CanEnterRemove {
            get {
                return this.canEnterRemoveField;
            }
            set {
                this.canEnterRemoveField = value;
            }
        }
        
        /// <remarks/>
        public bool CanKillAll {
            get {
                return this.canKillAllField;
            }
            set {
                this.canKillAllField = value;
            }
        }
        
        /// <remarks/>
        public bool CanModifyProperties {
            get {
                return this.canModifyPropertiesField;
            }
            set {
                this.canModifyPropertiesField = value;
            }
        }
        
        /// <remarks/>
        public bool CanOverrideUserLock {
            get {
                return this.canOverrideUserLockField;
            }
            set {
                this.canOverrideUserLockField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class GetAttributesResponseType {
        
        private FolderAttributesType attributesField;
        
        private ExtensionType extensionField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        public FolderAttributesType Attributes {
            get {
                return this.attributesField;
            }
            set {
                this.attributesField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionType Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class GetAttributesType {
        
        private string fullNameField;
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class GetStoryResponseType {
        
        private StoryType storyField;
        
        private ExtensionType extensionField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        public StoryType Story {
            get {
                return this.storyField;
            }
            set {
                this.storyField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionType Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsstory/types")]
    public partial class StoryType {
        
        private string fullPathField;
        
        private string queueLocatorField;
        
        private string storyAsNSMLField;
        
        private ExtensionType extensionField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string FullPath {
            get {
                return this.fullPathField;
            }
            set {
                this.fullPathField = value;
            }
        }
        
        /// <remarks/>
        public string QueueLocator {
            get {
                return this.queueLocatorField;
            }
            set {
                this.queueLocatorField = value;
            }
        }
        
        /// <remarks/>
        public string StoryAsNSML {
            get {
                return this.storyAsNSMLField;
            }
            set {
                this.storyAsNSMLField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionType Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class GetStoryType {
        
        private string queueFullNameField;
        
        private string queueLocatorField;
        
        /// <remarks/>
        public string QueueFullName {
            get {
                return this.queueFullNameField;
            }
            set {
                this.queueFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string QueueLocator {
            get {
                return this.queueLocatorField;
            }
            set {
                this.queueLocatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class CreateStoryResponseType {
        
        private StoryType newStoryField;
        
        private ExtensionType extensionField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        public StoryType NewStory {
            get {
                return this.newStoryField;
            }
            set {
                this.newStoryField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionType Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class CreateStoryType {
        
        private string nSMLField;
        
        private bool maintainLockField;
        
        /// <remarks/>
        public string NSML {
            get {
                return this.nSMLField;
            }
            set {
                this.nSMLField = value;
            }
        }
        
        /// <remarks/>
        public bool MaintainLock {
            get {
                return this.maintainLockField;
            }
            set {
                this.maintainLockField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class SetCurrentQueueResponseType {
        
        private ExtensionType extensionField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        public ExtensionType Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class SetCurrentQueueType {
        
        private string queueFullNameField;
        
        /// <remarks/>
        public string QueueFullName {
            get {
                return this.queueFullNameField;
            }
            set {
                this.queueFullNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class HasPreviousResponseType {
        
        private bool hasPreviousField;
        
        private ExtensionType extensionField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        public bool HasPrevious {
            get {
                return this.hasPreviousField;
            }
            set {
                this.hasPreviousField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionType Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class HasPreviousType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class HasNextResponseType {
        
        private bool hasNextField;
        
        private ExtensionType extensionField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        public bool HasNext {
            get {
                return this.hasNextField;
            }
            set {
                this.hasNextField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionType Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class HasNextType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avid.com/inewsqueue/types")]
    public partial class GetStoriesResponseType {
        
        private StoryType[] storiesField;
        
        private ExtensionType extensionField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Stories")]
        public StoryType[] Stories {
            get {
                return this.storiesField;
            }
            set {
                this.storiesField = value;
            }
        }
        
        /// <remarks/>
        public ExtensionType Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetStoriesCompletedEventHandler(object sender, GetStoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetStoriesResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetStoriesResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HasNextCompletedEventHandler(object sender, HasNextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasNextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasNextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HasNextResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HasNextResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void HasPreviousCompletedEventHandler(object sender, HasPreviousCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasPreviousCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasPreviousCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HasPreviousResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HasPreviousResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SetCurrentQueueCompletedEventHandler(object sender, SetCurrentQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCurrentQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCurrentQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SetCurrentQueueResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SetCurrentQueueResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateStoryCompletedEventHandler(object sender, CreateStoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateStoryResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateStoryResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetStoryCompletedEventHandler(object sender, GetStoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetStoryResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetStoryResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAttributesCompletedEventHandler(object sender, GetAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetAttributesResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetAttributesResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetQueueRecordsCompletedEventHandler(object sender, GetQueueRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueueRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueueRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetQueueRecordsResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetQueueRecordsResponseType)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591